""" * Задание 2. Выражение-генератор
Создайте объект-генератор, выбирающий из функции-генератора rand_nums, написанного в предыдущем задании, только
нечетные числа.
Проитерируйтесь по этому объекту-генератору и выведите на экран для каждого значения на отдельной строке:
порядковый номер (начиная с 1-го) и соответствующее ему значение. Например:
1 11
...
10 7
Ниже в комментарии к задаче напишите какое N надо передать в функцию-генератор rand_nums, чтобы объект-генератор
вернул нам не менее 20 значений.
Например:
# В rand_nums надо передать ______ (число)"""

from random import randrange


def rand_nums(n):
    i = 0
    while i < n:
        i += 1
        yield randrange(1, MAX_NUM+1)


MAX_NUM = 100
num = 20
gen_num = rand_nums(num)
gen2 = (number - 1 + number % 2 for number in gen_num)
# тут преобразование из четного числа в нечетное ( если остаток от деления на 2 равен 1, то получим
# number - 1 + 1, то есть выдаем сгенерированное число без изменений, оно нечетное. А вот если оно четное, то
# number % 2  будет равно 0 и мы выдаем number - 1. За границы диапазона не выйдем, так как минимальное четное число,
# возвращаемое функцией rand_nums равно 2 и оно превратится в 1 у нас. Число 100 превратится в 99)
#
# ниже вариант генерации нечетных чисел с условием if, выбираем нечетные числа из rand_nums
gen3 = (number for number in rand_nums(num*2+10) if number % 2 == 1)

for j in range(1, num + 1):
    print(j, next(gen2))
print('другой способ')
for j in range(1, num + 1):
    print(j, next(gen3))

# В rand_nums надо передать 20, чтобы получить 20 нечетных чисел, если использовать
# преобразование number - 1 + number % 2. Если взять вариант с условием if number % 2 == 1, то в rand_nums
# надо передать число большее 40, так как около половины (или чуть больше или меньше) сгенерированных чисел
# может оказаться четными. Думаю, из 50 чисел должно получиться 20 нечетных, но элемент неожиданности
# все равно присутствует
